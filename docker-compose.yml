services:
  # Base de datos MongoDB
  mongodb:
    image: mongo:7.0
    container_name: petstyle_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: petstyle
    volumes:
      - ./mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - petstyle_network

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: petstyle_backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/petstyle?authSource=admin
      JWT_SECRET: your_jwt_secret_here
      CLOUDINARY_CLOUD_NAME: your_cloud_name
      CLOUDINARY_API_KEY: your_api_key
      CLOUDINARY_API_SECRET: your_api_secret
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
    networks:
      - petstyle_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: petstyle_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - petstyle_network

  # Nginx (Proxy Reverso Principal)
  nginx:
    image: nginx:alpine
    container_name: petstyle_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - petstyle_network

volumes: {}

networks:
  petstyle_network:
    driver: bridge
